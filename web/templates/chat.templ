package templates

import "github.com/rodrigomeireles/llm-client/backend/models"

templ ChatClient(session string) {
	<!DOCTYPE html>
	<html lang="pt-BR">
		<head>
			<meta charset="UTF-8"/>
			<meta http-equiv="X-UA-Compatible" content="IE=edge"/>
			<meta name="viewport" content="width=device-width, initial-scale=1.0"/>
			<link rel="stylesheet" href="styles/output.css"/>
			<link rel="preconnect" href="https://fonts.googleapis.com"/>
			<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin/>
			<script src="scripts/htmx.min.js"></script>
			<script src="https://unpkg.com/htmx.org@1.9.12/dist/ext/debug.js"></script>
			<!-- UIkit CSS -->
			<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/uikit@3.21.9/dist/css/uikit.min.css" />

			<!-- UIkit JS -->
			<script src="https://cdn.jsdelivr.net/npm/uikit@3.21.9/dist/js/uikit.min.js"></script>
			<script src="https://cdn.jsdelivr.net/npm/uikit@3.21.9/dist/js/uikit-icons.min.js"></script>
		</head>
		<body
			class="flex flex-col self-stretch items-center h-screen bg-oxford_blue justify-between text-platinum text-2xl p-5 z-0 overflow-y-hidden"
		>
			<script>
		function toggle_sidebar(event) {
			if (["open-sidebar", "close-sidebar"].includes(event.target.parentElement.id)
				|| ["open-sidebar", "close-sidebar"].includes(event.target.parentElement.parentElement.id)
			) {
				const sidebar = htmx.find("[name='sidebar']")
				const inputs = sidebar.querySelectorAll("input")
				inputs.forEach((input) => input.classList.toggle("invisible"))
				sidebar.classList.toggle('-translate-x-full')
			}
		}
	</script>
			<div class="flex overflow-hidden self-start" hx-on:click="toggle_sidebar(event)">
				<!-- Sidebar -->
				<div
					class="h-screen bg-oxford_blue z-1 w-auto overflow-y-auto transition-transform transform -translate-x-full ease-in-out duration-300 absolute "
					name="sidebar"
				>
					<!-- Your Sidebar Content -->
					<div class="text-gray-500 w-auto pr-2">
						<button class="hover:text-gray-600 text-right pt-0" id="close-sidebar">
							<svg
								class="w-6 h-6"
								fill="none"
								stroke="currentColor"
								viewBox="0 0 24 24"
								xmlns="http://www.w3.org/2000/svg"
							>
								<path
									stroke-linecap="round"
									stroke-linejoin="round"
									stroke-width="2"
									d="M4 6h16M4 12h16M4 18h16"
								></path>
							</svg>
						</button>
					</div>
				</div>
				<button class="text-gray-500 hover:text-gray-600" id="open-sidebar">
					<svg
						class="w-6 h-6"
						fill="none"
						stroke="currentColor"
						viewBox="0 0 24 24"
						xmlns="http://www.w3.org/2000/svg"
					>
						<path
							stroke-linecap="round"
							stroke-linejoin="round"
							stroke-width="2"
							d="M4 6h16M4 12h16M4 18h16"
						></path>
					</svg>
				</button>
			</div>
			<div class="flex flex-col-reverse overflow-y-hidden h-5/6 w-7/10 ">
				<div
					hx-get="/history"
					hx-trigger="load once"
					id="history"
					hx-on:click=""
					class="break-words whitespace-pre-wrap mx-auto text-left"
				></div>
			</div>
			<form class="space-y-3 flex-auto pt-2" hx-on::before-request="this.reset()">
				<textarea
					name="user_message"
					placeholder="Ask me anything"
					class="self-stretch text-oxford_blue whitespace-pre-wrap rounded-md border bg-white p-5 text-2xl font-normal normal-case opacity-100 outline-none focus:opacity-100 focus:ring scroll-p-2"
					hx-post="/history"
					hx-include="[name='model'],[name='temperature'],[name='top_p']"
					hx-target="#history"
					hx-trigger="keydown[shiftKey&&key=='Enter']"
					onkeydown="if (event.key === 'Enter' && event.shiftKey) { event.preventDefault(); return false; }"
				></textarea>
			</form>

			<!-- This is a button toggling the modal -->
			<button uk-toggle="target: #modal" type="button"></button>

			<div id="modal" uk-modal>
				<div class="uk-modal-dialog uk-modal-body">
						<div>
							<label for="system_message" class="block mb-2 text-sm font-medium text-gray-900 dark:text-white">System message</label>
							<input type="text" name="system_message" id="system_message" class="bg-gray-50 border border-gray-300 text-gray-900 text-sm rounded-lg focus:ring-blue-500 focus:border-blue-500 block w-full p-2.5 dark:bg-gray-600 dark:border-gray-500 dark:placeholder-gray-400 dark:text-white" placeholder="You are an AI assistant." required />
						</div>
						<ul class="mt-4">
							<li class="mb-2">
								<select name="model" class="block hover:text-indigo400 bg-transparent">
									for pretty_name, value := range models.GroqModels {
										<option value={ value }>{ pretty_name } </option>
									}
								</select>
							</li>
							<li class="mb-2">
								<label for="temperature">Temperature </label>
								<input type="range" name="temperature" min="0" max="2" step="0.1" value="1" class="block hover:text-indigo-400 invisible"/>
							</li>
							<li class="mb-2">
								<label for="top_p">Top P </label>
								<input type="range" name="top_p" min="0" max="1" step="0.1" value="1" class="block hover:text-indigo-400 invisible"/>
							</li>
						</ul>
					<button class="uk-modal-close" type="button"></button>
				</div>
			</div>
		</body>
	</html>
}
